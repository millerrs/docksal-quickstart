#!/bin/bash

## Initializes the site
##
## Usage: fin init

set -e

#-------------------- Paths -----------------------------------

DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
PARENT_PATH="$(dirname "$DOCROOT_PATH")"
SITEDIR_PATH="${DOCROOT_PATH}/sites/"
BACKUPS_PATH="${PROJECT_ROOT}/.docksal/data"

EXAMPLE_SETTINGS="${SITEDIR_PATH}/example.settings.local.php"
LOCAL_SETTINGS="${SITEDIR_PATH}/default/settings.local.php"

#-------------------- END: Paths ------------------------------


#-------------------- Helpers ---------------------------------

add_local_settings ()
{

  if [ ! -f ${LOCAL_SETTINGS} ]; then
    echo "Creating a local settings file."
    cp ${EXAMPLE_SETTINGS} ${LOCAL_SETTINGS}
  fi

}

create_backup_dir ()
{

  if [ ! -d ${BACKUPS_PATH} ]; then
    echo "Creating a data directory."
    mkdir ${BACKUPS_PATH}
  fi

}

fix_permissions ()
{
  chmod 755 "${SITEDIR_PATH}/default"
}

get_latest_db ()
{

  if [ -x "$(command -v terminus)" ]; then
    terminus auth:login
    terminus backup:get ${PANTHEON_SITE}.live --element=db --to=${BACKUPS_PATH}/latest.tar.gz
  else
    echo "Cannot find terminus.  Check that it has been installed."
  fi

}

move_latest_backup ()
{

  if [ -f ${BACKUPS_PATH}/latest.tar.gz ]; then
    day=$(date +%Y-%m-%d_T_%H-%M-%S)
    mv ${BACKUPS_PATH}/latest.tar.gz{,-${day}}
  fi

}

#-------------------- END: Helpers -----------------------------


#-------------------- Docker Check ----------------------------

if [ "$DOCKER_RUNNING" == true ]; then
  echo "Docker is running.  Resetting services."
  fin reset -f
else
  echo "Docker is not running. Starting containers."
  fin up
fi

#--------------------- END: Docker Check -----------------------


#--------------------- Composer Install ------------------------

cd ${PARENT_PATH}
echo "Installing all libraries and dependencies."
composer install

#--------------------- END: Composer Install --------------------


#--------------------- Install Prep -----------------------------

fix_permissions
add_local_settings
create_backup_dir

#--------------------- END: Install Prep ------------------------


#--------------------- Site Install -----------------------------

cd ${DOCROOT_PATH}

if [ -n "$PANTHEON_SITE" ]; then
  echo "Attempting to grab the db from Pantheon."
  move_latest_backup && get_latest_db && gunzip < ${BACKUPS_PATH}/latest.tar.gz | fin sqli
else
  IP=$(fin vm ip)
  fin drush site-install --db-url=mysql://user:user@$IP:33061/default
fi

fin drush uli

#--------------------- END: Site Install ------------------------